# 持久化
persistence:  # mysql
  init: true
  claimName: arkid
  storageClass: csi-disk-sas
  accessMode: ReadWriteOnce
  size: 10Gi


mysql:
  image: mysql:5.7
  pullPolicy: IfNotPresent
  rootPassword: root
  database: arkid

redis:
  image: redis:5.0.3
  pullPolicy: IfNotPresent

ldap:
  image: longguikeji/ark-sql-ldap:1.3.0
  pullPolicy: IfNotPresent
  adminPassword: admin
  ## service 的类型，ClusterIP, NodePort, LoadBalancer
  svcType: NodePort
  # 当svcType为NodePort时有效，ldap 636暴露到nodePort的端口, 留空则会随机挑选一个端口
  nodePort636:
  # 当svcType为NodePort时有效，ldap 389暴露到nodePort的端口, 留空则会随机挑选一个端口
  nodePort389:
be:
  image: longguikeji/arkid:v2dev
  pullPolicy: IfNotPresent
  ## service 的类型，ClusterIP, NodePort, LoadBalancer
  svcType: ClusterIP
  ## {  "limits": {"cpu": "800m","memory": "1024Mi"},"requests": {"cpu": "200m","memory": "256Mi"}}
  resources: {}


fe:
  image: longguikeji/arkid-fe:v2dev
  pullPolicy: IfNotPresent
  ## service 的类型，ClusterIP, NodePort, LoadBalancer
  svcType: ClusterIP

webServerBroker:
  ## 如果单独部署arkid，那么arkOS留空, webServerBroker 下的参数都不用填了；
  ## 否则填写arkOS的api地址：例如：http://ark-apisvr
  arkOS:
  name: web-server-broker
  image: longguikeji/arkid-broker:1.0.0
  pullPolicy: IfNotPresent
  port: 8080

portal:
  image: nginx:alpine
  pullPolicy: IfNotPresent
  ## service 的类型，ClusterIP, NodePort, LoadBalancer
  svcType: ClusterIP


nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: true
  # cert-manager
  cert: false
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.k8s.io/cluster-issuer: letsencrypt-issuer
  host:
    # 需要DNS解析到ingress的ip
    # 本地调试就在 /etc/hosts里配置一下
    name: passport.osinfra.cn
  # 如果没有 cert-manager，tls为true则会自动生成一个secret
  tls: true


imagePullSecrets:

settingsLocal: |-
  # CONFIG_VERSION = 'longgui-2021-04-01'
  BASE_URL = 'https://password.osinfra.cn'

